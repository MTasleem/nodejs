
function generateSalt() {
    var text = "";
    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789*%";

    for( var i=0; i < 12; i++ )
        text += possible.charAt(Math.floor(Math.random() * possible.length));
    return text;
}

module.exports.encrypt = (cryptograpgy, toHash, salt=undefined) => {
	return new Promise(function(resolve, reject) {
		if(!salt) {
			salt = generateSalt() + generateSalt();
		}
		let crypto = require('crypto');

		try {
			let cipher = crypto.createCipher(cryptograpgy.toLowerCase(), salt);
			let encrypted = '';
			cipher.on('readable', () => {
				const data = cipher.read();
				if (data) {
					encrypted += data.toString('hex');
				}
			});
			cipher.on('end', () => {
				resolve({
					salt: salt,
					cryptography: cryptograpgy,
					hash: encrypted
				});
			});

			cipher.write(toHash);
			cipher.end();
		} catch(err) {
			reject(err);
		}
	});
}

module.exports.decrypt = (cryptograpgy, salt, hash) => {
	return new Promise(function(resolve, reject) {
		let crypto = require('crypto');

		try {
			let cipher = crypto.createDecipher(cryptograpgy.toLowerCase(), salt);
			let decrypt = '';
			cipher.on('readable', () => {
				const data = cipher.read();
				if (data) {
					decrypt += data.toString('utf8');
				}
			});
			cipher.on('end', () => {
				resolve({ original: decrypt });
			});

			cipher.write(hash, 'hex');
			cipher.end();
		} catch(err) {
			reject(err);
		}
	});
}
